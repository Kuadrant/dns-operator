apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: dns-operator-controller-manager
  name: controller-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: dns-operator-controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: dns-operator-controller-manager
    spec:
      containers:
      - args:
        - --leader-elect
        - --metrics-bind-address=:8080
        - --provider=aws,awsFromSecret,google,googleFromSecret,azure,azureFromSecret,coredns,corednsFromSecret
        - --zap-log-level=debug
        command:
        - /manager
        env:
        - name: WATCH_NAMESPACES
          value: scale-test-{{.Iteration}},kuadrant-dns-operator-{{.Iteration}}
        # static json creds mounted from secret (google,azure)
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: "/etc/secrets/service-account/credentials.json"
        image: quay.io/kuadrant/dns-operator:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
          - containerPort: 8080
            name: metrics
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        # static json creds mounted from secret (google,azure)
        volumeMounts:
        - name: google-application-credentials
          mountPath: /etc/secrets/service-account/
        # static json creds mounted from secret
        - name: azure-application-credentials
          mountPath: /etc/kubernetes/azure.json
      volumes:
      - name: google-application-credentials
        secret:
          secretName: dns-provider-credentials-gcp
          optional: true
      - name: azure-application-credentials
        secret:
          secretName: dns-provider-credentials-azure
          optional: true
      securityContext:
        runAsNonRoot: true
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
